$date
	Sun Sep 28 23:20:04 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module des_control_unit_tb $end
$var wire 2 ! state [1:0] $end
$var wire 1 " sel_output $end
$var wire 1 # sel_input $end
$var wire 5 $ round_count [4:0] $end
$var wire 1 % error $end
$var wire 1 & en_sbox $end
$var wire 1 ' en_pbox $end
$var wire 1 ( en_key_schedule $end
$var wire 1 ) en_key_mixing $end
$var wire 1 * en_ip $end
$var wire 1 + en_fp $end
$var wire 1 , en_feistel $end
$var wire 1 - en_expansion $end
$var wire 1 . done $end
$var parameter 2 / DONE $end
$var parameter 2 0 ERROR $end
$var parameter 2 1 IDLE $end
$var parameter 2 2 RUN $end
$var reg 1 3 clk $end
$var reg 1 4 data_ready $end
$var reg 1 5 key_ready $end
$var reg 1 6 rst_n $end
$var reg 1 7 start $end
$var integer 32 8 i [31:0] $end
$scope module dut $end
$var wire 1 3 clk $end
$var wire 1 4 data_ready $end
$var wire 1 5 key_ready $end
$var wire 1 6 rst_n $end
$var wire 1 7 start $end
$var parameter 2 9 DONE $end
$var parameter 2 : ERROR $end
$var parameter 2 ; IDLE $end
$var parameter 2 < RUN $end
$var reg 1 . done $end
$var reg 1 - en_expansion $end
$var reg 1 , en_feistel $end
$var reg 1 + en_fp $end
$var reg 1 * en_ip $end
$var reg 1 ) en_key_mixing $end
$var reg 1 ( en_key_schedule $end
$var reg 1 ' en_pbox $end
$var reg 1 & en_sbox $end
$var reg 1 % error $end
$var reg 2 = next_state [1:0] $end
$var reg 5 > round_count [4:0] $end
$var reg 1 # sel_input $end
$var reg 1 " sel_output $end
$var reg 2 ? state [1:0] $end
$upscope $end
$scope task check_control_signals $end
$var reg 1 @ exp_en_expansion $end
$var reg 1 A exp_en_feistel $end
$var reg 1 B exp_en_fp $end
$var reg 1 C exp_en_ip $end
$var reg 1 D exp_en_key_mixing $end
$var reg 1 E exp_en_key_schedule $end
$var reg 1 F exp_en_pbox $end
$var reg 1 G exp_en_sbox $end
$var reg 1 H exp_sel_input $end
$var reg 1 I exp_sel_output $end
$upscope $end
$scope task check_state $end
$var reg 2 J expected_state [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 <
b0 ;
b11 :
b10 9
b1 2
b0 1
b11 0
b10 /
$end
#0
$dumpvars
bx J
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
b0 ?
b0 >
b0 =
bx 8
07
06
05
04
03
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
b0 $
1#
0"
b0 !
$end
#5000
13
#10000
03
#15000
13
#20000
03
16
#25000
13
#30000
1(
1*
1#
b1 =
03
17
14
15
b0 J
#35000
1,
1'
1&
1)
1-
0#
1(
0*
b1 !
b1 ?
13
#40000
1(
1,
1'
1&
1)
1-
03
b1 8
0I
0H
1E
1A
1F
1G
1D
1@
0B
0C
b1 J
07
#45000
1(
1,
1'
1&
1)
1-
b1 $
b1 >
13
#50000
03
b10 8
#55000
1(
1,
1'
1&
1)
1-
b10 $
b10 >
13
#60000
03
b11 8
#65000
1(
1,
1'
1&
1)
1-
b11 $
b11 >
13
#70000
03
b100 8
#75000
1(
1,
1'
1&
1)
1-
b100 $
b100 >
13
#80000
03
b101 8
#85000
1(
1,
1'
1&
1)
1-
b101 $
b101 >
13
#90000
03
b110 8
#95000
1(
1,
1'
1&
1)
1-
b110 $
b110 >
13
#100000
03
b111 8
#105000
1(
1,
1'
1&
1)
1-
b111 $
b111 >
13
#110000
03
b1000 8
#115000
1(
1,
1'
1&
1)
1-
b1000 $
b1000 >
13
#120000
03
b1001 8
#125000
1(
1,
1'
1&
1)
1-
b1001 $
b1001 >
13
#130000
03
b1010 8
#135000
1(
1,
1'
1&
1)
1-
b1010 $
b1010 >
13
#140000
03
b1011 8
#145000
1(
1,
1'
1&
1)
1-
b1011 $
b1011 >
13
#150000
03
b1100 8
#155000
1(
1,
1'
1&
1)
1-
b1100 $
b1100 >
13
#160000
03
b1101 8
#165000
1(
1,
1'
1&
1)
1-
b1101 $
b1101 >
13
#170000
03
b1110 8
#175000
1(
1,
1'
1&
1)
1-
b1110 $
b1110 >
13
#180000
03
b1111 8
#185000
1(
1,
1'
1&
1)
1-
b1111 $
b1111 >
13
#190000
03
b10000 8
#195000
1+
1(
1,
1'
1&
1)
1-
b10 =
b10000 $
b10000 >
13
#200000
03
b10001 8
#205000
b0 =
1"
1.
0(
0,
0'
0&
0)
0-
0+
b10 !
b10 ?
13
#210000
03
b10 J
#215000
1#
0"
0.
b0 !
b0 ?
13
#220000
b11 =
1#
03
17
05
b0 J
#225000
1%
0#
b0 $
b0 >
b11 !
b11 ?
13
#230000
b0 =
1%
03
15
b11 J
17
#235000
1(
1*
1#
0%
b1 =
b0 !
b0 ?
13
#240000
b0 =
1#
0(
0*
03
b0 J
07
#245000
13
#250000
03
#255000
13
#260000
03
